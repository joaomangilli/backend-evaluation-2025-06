openapi: 3.0.1
info:
  title: Packer42 API
  version: v1
paths:
  /session:
    post:
      summary: Create session
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
            example:
              email: alice@email.com
              password: password
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
  /price:
    post:
      summary: Calculate reservation price
      description: |
        Calculates the total reservation price using daily fees. Both `start_at`
        and `end_at` must be ISO 8601 timestamps. The time component is ignored
        when determining the number of days.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                start_at:
                  type: string
                  format: date-time
                  example: "2025-06-18T00:00:00Z"
                end_at:
                  type: string
                  format: date-time
                  example: "2025-06-19T00:00:00Z"
              required:
                - start_at
                - end_at
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  price_token:
                    type: string
                  price:
                    type: integer
                  currency:
                    type: string
              example:
                price_token: "<price_token>"
                price: 20000
                currency: BRL
  /reservations:
    post:
      summary: Create reservation
      description: |
        Creates a new parking reservation. Requires a valid price_token from the
        /price endpoint and a payment_token. The reservation will be processed
        asynchronously and the status will be updated accordingly.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                price_token:
                  type: string
                  description: Token received from price calculation endpoint
                payment_token:
                  type: string
                  description: Payment token for processing the transaction
                start_at:
                  type: string
                  format: date-time
                  example: "2025-06-18T00:00:00Z"
                end_at:
                  type: string
                  format: date-time
                  example: "2025-06-19T00:00:00Z"
                amount:
                  type: integer
                  description: Total amount in cents
                  example: 20000
              required:
                - price_token
                - payment_token
                - start_at
                - end_at
                - amount
            example:
              price_token: "<price_token>"
              payment_token: "<payment_token>"
              start_at: "2025-06-18T00:00:00Z"
              end_at: "2025-06-19T00:00:00Z"
              amount: 20000
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  user_id:
                    type: integer
                  price_token:
                    type: string
                  payment_token:
                    type: string
                  start_at:
                    type: string
                    format: date-time
                  end_at:
                    type: string
                    format: date-time
                  amount:
                    type: integer
                  status:
                    type: string
                    enum: [pending, confirmed, failed, expired]
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
              example:
                id: 1
                user_id: 1
                price_token: "<price_token>"
                payment_token: "<payment_token>"
                start_at: "2025-06-18T00:00:00Z"
                end_at: "2025-06-19T00:00:00Z"
                amount: 20000
                status: "pending"
                created_at: "2025-07-02T10:00:00Z"
                updated_at: "2025-07-02T10:00:00Z"
        '422':
          description: unprocessable entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Invalid price token"
  /webhooks/payment:
    post:
      summary: Payment webhook
      description: |
        Webhook endpoint for receiving payment status updates from external payment providers.
        This endpoint is called by payment processors to notify about reservation payment status changes.
        The status update is processed asynchronously via background job.
        No authentication required as this is a webhook endpoint.
      parameters:
        - name: X-Webhook-Secret
          in: header
          description: Webhook secret for request validation
          required: true
          schema:
            type: string
            example: "secret"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reservation_id:
                  type: integer
                  description: ID of the reservation to update
                  example: 1
                status:
                  type: string
                  description: New payment status for the reservation
                  enum: [pending, confirmed, failed, expired]
                  example: "confirmed"
              required:
                - reservation_id
                - status
            example:
              reservation_id: 1
              status: "confirmed"
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: object
                description: Empty response indicating webhook was received successfully
              example: {}
  /up:
    get:
      summary: Health check
      responses:
        '200':
          description: ok
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
